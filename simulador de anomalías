// ==UserScript==
// @id             iitc-plugin-anomaly-simulator
// @name           IITC Plugin: Anomaly Simulator
// @category       Layer
// @version        1.1.0
// @description    Simulador de anomalías para entrenamiento. Compatible con DrawTools y menú de IITC.
// @match          *://intel.ingress.com/*
// @grant          none
// ==/UserScript==

function wrapper(plugin_info) {
    if (typeof window.plugin !== 'function') window.plugin = function () {};

    plugin_info.buildName = 'anomaly-simulator';
    plugin_info.dateTimeVersion = '202507030002';
    plugin_info.pluginId = 'iitc-plugin-anomaly-simulator';

    window.plugin.anomalySimulator = function () {};
    const plugin = window.plugin.anomalySimulator;

    plugin.enabled = true;
    plugin.zones = [];
    plugin.tasks = {};
    plugin.logs = [];
    plugin.layerGroup = new L.LayerGroup();
    plugin.defaultStyle = {
        color: '#ff6600',
        weight: 2,
        opacity: 0.8,
        fillColor: '#ff9900',
        fillOpacity: 0.3,
    };

    plugin.toggleEnable = function () {
        plugin.enabled = !plugin.enabled;
        if (plugin.enabled) {
            window.map.addLayer(plugin.layerGroup);
            plugin.logEvent("Simulador activado.");
        } else {
            window.map.removeLayer(plugin.layerGroup);
            plugin.logEvent("Simulador desactivado.");
        }
    };

    plugin.logEvent = function (msg) {
        const time = new Date().toLocaleTimeString();
        plugin.logs.push(`[${time}] ${msg}`);
        console.log('[AnomalySimulator]', msg);
    };

    plugin.addZone = function (lat, lng, radius, name) {
        if (!plugin.enabled) {
            alert("El simulador está desactivado.");
            return;
        }
        const circle = L.circle([lat, lng], {
            ...plugin.defaultStyle,
            radius: radius,
        }).bindPopup(`<b>Zona:</b> ${name}`);
        plugin.layerGroup.addLayer(circle);
        plugin.zones.push({ name, lat, lng, radius });
    };

    plugin.simulateShard = function (lat, lng) {
        if (!plugin.enabled) {
            alert("El simulador está desactivado.");
            return;
        }
        const marker = L.marker([lat, lng], {
            icon: L.icon({
                iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Orange_circle.svg/1024px-Orange_circle.svg.png',
                iconSize: [20, 20],
                iconAnchor: [10, 10],
            }),
        }).bindPopup('Shard simulado');
        plugin.layerGroup.addLayer(marker);
        plugin.logEvent(`Shard simulado en ${lat.toFixed(5)}, ${lng.toFixed(5)}`);
    };

    plugin.assignTask = function (agent, task) {
        plugin.tasks[agent] = task;
        plugin.logEvent(`Tarea asignada a ${agent}: ${task}`);
    };

    plugin.importDrawnZones = function () {
        if (!window.plugin.drawTools || !window.plugin.drawTools.drawnItems) {
            alert("DrawTools no está activo.");
            return;
        }

        window.plugin.drawTools.drawnItems.eachLayer(layer => {
            if (layer instanceof L.Circle) {
                const center = layer.getLatLng();
                const radius = layer.getRadius();
                const name = prompt("Nombre para la zona:", "Zona");
                if (name) plugin.addZone(center.lat, center.lng, radius, name);
            }
        });

        plugin.logEvent("Zonas importadas desde DrawTools.");
    };

    plugin.showControlPanel = function () {
        const html = `
            <div>
                <label><input type="checkbox" onclick="window.plugin.anomalySimulator.toggleEnable()" ${plugin.enabled ? "checked" : ""}/> Activar simulador</label><br/><br/>
                <button onclick="window.plugin.anomalySimulator.importDrawnZones()">Importar zonas (DrawTools)</button><br/>
                <button onclick="window.plugin.anomalySimulator.simulateShard(-36.827, -73.050)">Simular Shard</button><br/>
                <button onclick="window.plugin.anomalySimulator.assignTask('AgenteX', 'Defender zona 1')">Asignar tarea</button><br/>
                <button onclick="alert(window.plugin.anomalySimulator.logs.join('\\n'))">Ver log</button>
            </div>
        `;
        dialog({
            title: 'Simulador de Anomalías',
            html: html,
            width: 'auto',
            dialogClass: 'ui-dialog',
        });
    };

    function setup() {
        window.addLayerGroup('Anomaly Simulator Zones', plugin.layerGroup, plugin.enabled);

        if (window.useAndroidPanes) {
            android.addPane('anomalySim', 'Anomaly Sim');
            android.addPaneButton('anomalySim', 'Panel', plugin.showControlPanel);
        } else {
            $('#toolbox').append('<a onclick="window.plugin.anomalySimulator.showControlPanel()">Anomaly Sim</a>');
        }

        plugin.logEvent("Simulador listo.");
    }

    setup.info = plugin_info;
    if (!window.bootPlugins) window.bootPlugins = [];
    window.bootPlugins.push(setup);
    if (window.iitcLoaded && typeof setup === 'function') setup();
}

var script = document.createElement('script');
var info = {};

if (typeof GM_info !== 'undefined' && GM_info && GM_info.script) {
    info.script = {
        version: GM_info.script.version,
        name: GM_info.script.name,
        description: GM_info.script.description
    };
}

script.appendChild(document.createTextNode('(' + wrapper + ')(' + JSON.stringify(info) + ')'));
(document.body || document.head || document.documentElement).appendChild(script);
